package db;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.Connection;


public class MySQLTableCreation {
	// Run this as Java application to reset the database
	public static void main(String[] args) {
		try {
			// STEP 1: Connect to MySQL
			System.out.println("Connecting to " + MySQLDBUtil.URL_TEST);
			// The newInstance() call is a work around for some broken Java implementation
			Class.forName("com.mysql.cj.jdbc.Driver");
			// Obtaining a connection from the DriverManager
			Connection conn = DriverManager.getConnection(MySQLDBUtil.URL_TEST);
			
			if (conn == null) {
				return;
			}
			
			// STEP 2: DROP existing tables (drop tables with foreign key first)
			Statement statement = conn.createStatement();
//			
//			String sql = "DROP TABLE IF EXISTS ingredients";
//			statement.executeUpdate(sql);
//			
//			sql = "DROP TABLE IF EXISTS fridge";
//			statement.executeUpdate(sql);
//			
			String sql = "DROP TABLE IF EXISTS history";
			statement.executeUpdate(sql);
//			
//			sql = "DROP TABLE IF EXISTS items"; 
//			statement.executeUpdate(sql);
//			
//			sql = "DROP TABLE IF EXISTS users";
//			statement.executeUpdate(sql);
//			
//			// STEP 3: Create new tables
//			sql = "CREATE TABLE items ("
//					+ "item_id INT NOT NULL,"
//					+ "image_url VARCHAR(255),"
//					+ "title VARCHAR(255),"
//					+ "instructions TEXT,"
//					+ "source_url VARCHAR(255),"
//					+ "PRIMARY KEY (item_id)"
//					+ ")";
//			statement.executeUpdate(sql);
//			
//			sql = "CREATE TABLE users ("
//					+ "user_id VARCHAR(255) NOT NULL," // username as id
//					+ "password VARCHAR(255) NOT NULL,"
//					+ "first_name VARCHAR(255),"
//					+ "last_name VARCHAR(255),"
//					+ "PRIMARY KEY (user_id)"
//					+ ")";
//			statement.executeUpdate(sql);
//			
//			sql = "CREATE TABLE ingredients ("
//					+ "item_id INT NOT NULL,"
//					+ "amount FLOAT,"
//					+ "unit VARCHAR(255),"
//					+ "ingredient VARCHAR(255) NOT NULL,"
//					+ "PRIMARY KEY (item_id, ingredient),"
//					+ "FOREIGN KEY (item_id) REFERENCES items(item_id) ON UPDATE CASCADE ON DELETE CASCADE"
//					+ ")";
//			statement.executeUpdate(sql);
//			
//			sql = "CREATE TABLE fridge ("
//					+ "user_id VARCHAR(255) NOT NULL,"
//					+ "ingredient VARCHAR(255) NOT NULL,"
//					+ "PRIMARY KEY (user_id, ingredient),"
//					+ "FOREIGN KEY (user_id) REFERENCES users(user_id) ON UPDATE CASCADE ON DELETE CASCADE"
//					+ ")";
//			statement.executeUpdate(sql);
//			
//			sql = "CREATE TABLE history ("
//					+ "user_id VARCHAR(255) NOT NULL,"
//					+ "item_id INT NOT NULL,"
//					+ "last_favor_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,"
//					+ "PRIMARY KEY (user_id, item_id),"
//					+ "FOREIGN KEY (user_id) REFERENCES users(user_id) ON UPDATE CASCADE ON DELETE CASCADE,"
//					+ "FOREIGN KEY (item_id) REFERENCES items(item_id) ON UPDATE CASCADE ON DELETE CASCADE"
//					+ ")";
//			statement.executeUpdate(sql);
//			
//			// STEP 4: insert fake user to test our database
//			sql = "INSERT INTO users VALUES('1111','3229C1097C00D497A0FD282D586BE050','John', 'Smith')";
//			statement.executeUpdate(sql);
			
			conn.close();
			System.out.println("Import done successfully");
			
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
}
